rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isSignedIn() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return isSignedIn() && request.auth.uid == userId;
    }

    // Users can read/write only their own profile
    match /users/{userId} {
      allow create: if isOwner(userId);
      allow read, update, delete: if isOwner(userId);
    }

    // Owner-based collections
    match /incomeStreams/{docId} {
      allow create: if isSignedIn() && request.auth.uid == request.resource.data.userId;
      allow read, update, delete: if isSignedIn() && request.auth.uid == resource.data.userId;
    }

    match /transactions/{docId} {
      function isOwnerCreate() { return isSignedIn() && request.auth.uid == request.resource.data.userId; }
      function isOwnerRead() { return isSignedIn() && request.auth.uid == resource.data.userId; }
      function userIdUnchanged() { return resource == null || request.resource.data.userId == resource.data.userId; }
      function validFields() {
        return request.resource.data.diff(resource.data).changedKeys().hasOnly([
          'userId','bankAccountId','amount','description','date','category','isIncome','incomeStreamId','merchant','createdAt','updatedAt'
        ]);
      }
      allow create: if isOwnerCreate() && validFields();
      allow read: if isOwnerRead();
      allow update, delete: if isOwnerRead() && userIdUnchanged() && validFields();
    }

    match /weeklySetAsides/{docId} {
      allow create: if isSignedIn() && request.auth.uid == request.resource.data.userId;
      allow read, update, delete: if isSignedIn() && request.auth.uid == resource.data.userId;
    }

    match /recurringBills/{docId} {
      allow create: if isSignedIn() && request.auth.uid == request.resource.data.userId;
      allow read, update, delete: if isSignedIn() && request.auth.uid == resource.data.userId;
    }

    match /cardProfiles/{docId} {
      allow create: if isSignedIn() && request.auth.uid == request.resource.data.userId;
      allow read, update, delete: if isSignedIn() && request.auth.uid == resource.data.userId;
    }

    match /glideGuardPlans/{docId} {
      allow create: if isSignedIn() && request.auth.uid == request.resource.data.userId;
      allow read, update, delete: if isSignedIn() && request.auth.uid == resource.data.userId;
    }

    // Default deny for everything else
    match /{document=**} {
      allow read, write: if false;
    }
  }
}